![Licencia MIT](https://img.shields.io/badge/licencia-MIT-blue.svg)
![Estado del Proyecto](https://img.shields.io/badge/estado-en%20progreso-yellow.svg)
![Versi√≥n](https://img.shields.io/badge/versi√≥n-1.0.0-brightgreen.svg)

![Logo](https://ci3.googleusercontent.com/meips/ADKq_NYye8g_ty_wD0XYL2GNMoDxBRpcB02j223NEnCIKMv91C9l_5f_N3N38F6JvoVwpkLhbY7i3sp5SaEjMVRInLoayPs_bzSGaWzDMCQtt6u6_sg-WvXgzvnf_2kBi05E55G_=s0-d-e1-ft#https://d335luupugsy2.cloudfront.net/cms/files/10224/1722974906/$2rp7nct8hor)

**7 Days of Code: D√≠a 1 - Comparaci√≥n en JavaScript** es parte del desaf√≠o #7DaysOfCode de Alura Latam. üéâ

## üöÄ Descripci√≥n

En el primer d√≠a del desaf√≠o, nos centraremos en uno de los aspectos m√°s importantes y comunes de JavaScript: la comparaci√≥n de valores y el manejo de tipos. En lenguajes compilados como Java o C#, los problemas con los tipos de variables se detectan en tiempo de compilaci√≥n. Sin embargo, en JavaScript, estos errores solo se revelan en tiempo de ejecuci√≥n debido a su naturaleza din√°mica.

Hoy aprender√°s sobre los problemas que pueden surgir al comparar valores de diferentes tipos y c√≥mo resolverlos.

## üõ†Ô∏è Problemas de Comparaci√≥n en JavaScript

JavaScript realiza conversiones de tipo impl√≠citas durante las comparaciones, lo que puede llevar a resultados inesperados. Por ejemplo:

```javascript
console.log(false == '0');          // true
console.log(null == undefined);     // true
console.log(" \t\r\n" == 0);        // true
console.log(' ' == 0);              // true
```

Puedes probar estos ejemplos en la consola de tu navegador para ver los resultados.

## üèóÔ∏è Tu Tarea

Tu misi√≥n es reescribir el siguiente c√≥digo para que imprima la informaci√≥n correcta, sin errores y con sentido:

```javascript
let numeroUn = 1;
let stringUn = '1';
let numeroTreinta = 30;
let stringTreinta = '30';
let numeroDiez = 10;
let stringDiez = '10';

if (COMPARAR numeroUn y stringUn) {
  console.log('Las variables numeroUn y stringUn tienen el mismo valor, pero tipos diferentes');
} else {
  console.log('Las variables numeroUn y stringUn no tienen el mismo valor');
}

if (COMPARAR numeroTreinta y stringTreinta) {
  console.log('Las variables numeroTreinta y stringTreinta tienen el mismo valor y el mismo tipo');
} else {
  console.log('Las variables numeroTreinta y stringTreinta no tienen el mismo tipo');
}

if (COMPARAR numeroDiez y stringDiez) {
  console.log('Las variables numeroDiez y stringDiez tienen el mismo valor, pero tipos diferentes');
} else {
  console.log('Las variables numeroDiez y stringDiez no tienen el mismo valor');
}
```

### üí° Consejo

Si no est√°s familiarizado con editores de c√≥digo como Visual Studio Code, puedes usar la consola del navegador para ejecutar el c√≥digo. Solo necesitas:

1. Hacer clic derecho en cualquier p√°gina web.
2. Seleccionar "Inspeccionar" y ir a la pesta√±a "Consola".
3. Escribir o pegar tu c√≥digo ah√≠.

¬°Muy f√°cil, verdad?

### üîç Extra

Para profundizar m√°s sobre operadores de comparaci√≥n en JavaScript, te recomiendo leer [este art√≠culo en Alura](https://www.alura.com.br/artigos/operadores-comparacao-javascript).

## üôè Agradecimientos

Este desaf√≠o forma parte de la serie #7DaysOfCode de [Alura Latam](https://www.alura.com.br/).

## üë§ Autor

Este proyecto fue creado y es mantenido por [LatinGladiador](https://github.com/LatinGladiador).

## üìú Licencia

Este proyecto est√° licenciado bajo la Licencia MIT. Consulta el archivo [LICENSE](LICENSE) para m√°s detalles.

---

[![MIT License](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
